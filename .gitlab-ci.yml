variables:
    BACKEND_IMAGE_TAG: "10.0"
    FRONTEND_IMAGE_TAG: "10.0"
    AWS_SERVER_HOST: "51.20.76.158"
    AWS_SERVER_DOMAIN: http://ec2-51-20-76-158.eu-north-1.compute.amazonaws.com

stages:
    - build
    - test
    - push
    - deploy

build:
    image: docker/compose:1.29.2
    stage: build
    script: 
        - docker-compose build --no-cache

test:
    image: docker/compose:1.29.2
    stage: test
    script:
        - docker-compose run $CI_REGISTRY_IMAGE/frontend:$FRONTEND_IMAGE_TAG npm test -- --watchAll=false

push:
    image: docker/compose:1.29.2
    stage: push
    before_script:
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    script:
        - docker-compose push

deploy:
    stage: deploy
    before_script:
        - chmod 400 $SSH_SERVER_KEY
    script: 
        - scp -o StrictHostKeyChecking=no -i $SSH_SERVER_KEY ./docker-compose.yml ubuntu@$AWS_SERVER_HOST:/home/ubuntu
        - ssh -o StrictHostKeyChecking=no -i $SSH_SERVER_KEY ubuntu@$AWS_SERVER_HOST "
            docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY &&
            export MYSQL_DATABASE=$MYSQL_DATABASE &&
            export MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD &&
            export BACKEND_IMAGE_TAG=$BACKEND_IMAGE_TAG &&
            export FRONTEND_IMAGE_TAG=$FRONTEND_IMAGE_TAG &&
            export CI_REGISTRY_IMAGE=$CI_REGISTRY_IMAGE &&
            export AWS_SERVER_HOST=$AWS_SERVER_HOST &&
            docker-compose down &&
            docker-compose up --no-build -d"
    environment:
        name: development
        url: $SERVER_DOMAIN

    